== datasets__
== service_calling_sequence
== check_parameters__
== notes_latest_

== temp__
== modify_services_for new cmda


== datasets__
20210815:
len(dict2), after
1384
dimLen:
0: 18
1: 17
2: 2
3: 977
4: 382
5: 6

20210715:
- remember to change to env FERRET before start.sh

== modify_services_for new cmda
== universalPlotting3
- universalPlotting6c.html, not need to change 
-- common-v5b.js -- need to change http or https, and port,
- pythonWrapper
-- don't use getRootDir.
-- load pickle, add 'rb'
-- read in dataList.js, use ' '.join()
-- In dataDir to do glob.glob, changed the hardcoded
-- add int() in time2YearMonth()
-- np.mask: the mask is zero size if no mask, instead of None
-- eof cannot save tser. to be solved (

== correlationMap:
- .html: change http
- common-v4.js: no change
-- don't use getRootDir.
-- load pickle, add 'rb'
-- hardcoded /mnt/data_2016 in des files. to be solved (


20210715:
- created env octave. 
-- conda install mesa-libgl-cos6-x86_64  # to solve libGL not found problem. Not working
-- cannot start octave with the followings:
    octave, octave-cli, octave -W
-- no solution so far.

20210807:
- Did a system octave install. Good:
sudo apt install octave

20210817:
- created cmda1 service, a working copy of cmda,

== service_calling_sequence
-- call:
cmda.html 
-> cmda.html : ajaxCall
-> app.py : serviceFunc
-> call_universalPlotting : display
-> cmda/wrapper : pythonWrapper

-- Return:
cmda/wrapper : pythonWrapper     -> stdOut, errOut
call_universalPlotting : display -> (message, imgFile, dataFile)
app.py : serviceFunc             -> json(success, message, url, dataUrl)
cmda.html : ajaxCall 

== check_parameters__
- for each service
- # of variables
- # of dimensions
- # time or 
== notes_latest_

== temp__
https://jpl-cmda.org/cmda1.html?vars=sst&datasets=/mnt/data/data_clean/cmip5/others/tos_era5.nc&lonMethod=3&lonS=0&lonE=360&latMethod=3&latS=-90&latE=90&presMethod=0&presS=500&presE=800&timeMethod=3&timeS=2000-01-15&timeE=2005-12-15&ferretLevel=10&colorMap=rainbow&plotTitle=&anomaly=0&climatology=undefined&timeMean=&purpose=&service=anomaly&basin=&userId=&serviceId=&dataUrl=https%3A//jpl-cmda.org/static/plottingFailed.png&plotUrl=https%3A//jpl-cmda.org/static/plottingFailed.png
